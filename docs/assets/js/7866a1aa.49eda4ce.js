"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3211],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),y=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=y(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=y(a),u=r,d=m["".concat(c,".").concat(u)]||m[u]||p[u]||o;return a?n.createElement(d,l(l({ref:t},s),{},{components:a})):n.createElement(d,l({ref:t},s))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var y=2;y<o;y++)l[y]=a[y];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6537:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>y});var n=a(7462),r=(a(7294),a(3905));const o={},l=void 0,i={unversionedId:"combo_layers",id:"combo_layers",title:"combo_layers",description:"Combo Layers",source:"@site/docs/combo_layers.md",sourceDirName:".",slug:"/combo_layers",permalink:"/docs/combo_layers",draft:!1,editUrl:"https://github.com/KMKfw/kmk_firmware/tree/master/docs/combo_layers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ctrl GUI Swap",permalink:"/docs/cg_swap"},next:{title:"Combos",permalink:"/docs/combos"}},c={},y=[{value:"Combo Layers",id:"combo-layers",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Fully Working Example code",id:"fully-working-example-code",level:2}],s={toc:y},m="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"combo-layers"},"Combo Layers"),(0,r.kt)("p",null,"Combo Layers is when you hold down 2 or more KC.MO() or KC.LM() keys at a time, and it goes to a defined layer."),(0,r.kt)("p",null,"By default combo layers is not activated. You can activate combo layers by adding this to your ",(0,r.kt)("inlineCode",{parentName:"p"},"main.py")," file.\nThe combolayers NEEDS to be above the ",(0,r.kt)("inlineCode",{parentName:"p"},"keyboard.modules.append(Layers(combolayers))")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"combo_layers = {\n  (1, 2): 3,\n   }\nkeyboard.modules.append(Layers(combo_layers))\n")),(0,r.kt)("p",null,"In the above code, when layer 1 and 2 are held, layer 3 will activate. If you release 1 or 2 it will go to whatever key is still being held, if both are released it goes to the default (0) layer.",(0,r.kt)("br",{parentName:"p"}),"\n","You should also notice that if you already have the layers Module activated, you can just add combolayers into ",(0,r.kt)("inlineCode",{parentName:"p"},"(Layers())")),(0,r.kt)("p",null,"You can add more, and even add more than 2 layers at a time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"combo_layers = {\n  (1, 2): 3,\n  (1, 2, 3): 4,\n  }\n")),(0,r.kt)("h2",{id:"limitations"},"Limitations"),(0,r.kt)("p",null,"There can only be one combo layer active at a time and for overlapping matches\nthe first matching combo in ",(0,r.kt)("inlineCode",{parentName:"p"},"combo_layers")," takes precedence.\nExample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"layers = Layers()\nlayers.combo_layers = {\n  (1, 2, 3): 8,\n  (1, 2): 9,\n  }\nkeyboard.modules.append(Layers(combo_layers))\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you activate layers 1 then 2, your active layer will be layer number 9."),(0,r.kt)("li",{parentName:"ul"},"If you activate layers 1 then 2, then 3, your active layer will be layer\nnumber 3 (because the layer combo ",(0,r.kt)("inlineCode",{parentName:"li"},"(1,2)")," has been activated, but layer 3\nstacks on top).",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"deactivate 1: you're on layer 3"),(0,r.kt)("li",{parentName:"ul"},"deactivate 2: you're on layer 3"),(0,r.kt)("li",{parentName:"ul"},"deactivate 3: you're on layer 8"))),(0,r.kt)("li",{parentName:"ul"},"If you activate layers 3 then 1, then 2, your active layer will be layer\nnumber 8. Deativate layer",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"deactivate any of 1/2/3: you're on layer 0")))),(0,r.kt)("h2",{id:"fully-working-example-code"},"Fully Working Example code"),(0,r.kt)("p",null,"Below is an example of a fully working keypad that uses combo layers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"print(\"Starting\")\n\nimport board\n\nfrom kmk.kmk_keyboard import KMKKeyboard\nfrom kmk.keys import KC\n\ncombo_layers = {\n  (1, 2): 3,\nkeyboard.modules.append(Layers(combo_layers))\n\n\nkeyboard = KMKKeyboard()\n\n\nkeyboard.keymap = [\n    [ #Default\n    KC.A,     KC.B  KC.C  KC.D,\n    KC.E,     KC.F  KC.G  KC.H,\n    KC.MO(1), KC.J, KC.K, KC.MO(2),\n    ],\n    [ #Layer 1\n    KC.N1,    KC.N2, KC.N3, KC.N4,\n    KC.N5,    KC.N6, KC.N7, KC.8,\n    KC.MO(1), KC.N9, KC.N0, KC.MO(2),\n    ],\n        [ #Layer 2\n    KC.EXLM,  KC.AT,   KC.HASH, KC.DLR,\n    KC.PERC,  KC.CIRC, KC.AMPR, KC.ASTR,\n    KC.MO(1), KC.LPRN, KC.RPRN, KC.MO(2),\n    ],\n        [ #Layer 3\n    KC.F1,   KC.F2, KC.F3,  KC.F4,\n    KC.F5,   KC.F6, KC.F7,  KC.F8,\n    KC.MO(1) KC.F9, KC.F10, KC.MO(2)\n    ]\n    \n]\n\nif __name__ == '__main__':\n    keyboard.go()\n")))}p.isMDXComponent=!0}}]);