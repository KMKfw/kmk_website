"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5593],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return b}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,m=p["".concat(l,".").concat(b)]||p[b]||d[b]||a;return n?o.createElement(m,i(i({ref:t},c),{},{components:n})):o.createElement(m,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3803:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return b},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={},l="boot.py",u={unversionedId:"boot",id:"boot",title:"boot.py",description:"boot.py lives in the root of your keyboard when mounted as a storage device.",source:"@site/docs/boot.md",sourceDirName:".",slug:"/boot",permalink:"/docs/boot",draft:!1,editUrl:"https://github.com/KMKfw/kmk_firmware/tree/master/docs/boot.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BLE HID",permalink:"/docs/ble_hid"},next:{title:"CapsWord",permalink:"/docs/capsword"}},c={},d=[{value:"Hiding device storage",id:"hiding-device-storage",level:2},{value:"Using your keyboard before the OS loads",id:"using-your-keyboard-before-the-os-loads",level:2},{value:"Disabling serial communication",id:"disabling-serial-communication",level:2},{value:"Example code",id:"example-code",level:2}],p={toc:d};function b(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bootpy"},"boot.py"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"boot.py")," lives in the root of your keyboard when mounted as a storage device.\nThere is a more detailed explanation in the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.circuitpython.org/en/latest/README.html"},"circuit python docs"),",\nhowever there are some common use cases for your keyboard listed here."),(0,a.kt)("h2",{id:"hiding-device-storage"},"Hiding device storage"),(0,a.kt)("p",null,"You can hide your device from showing up as a USB storage by default (this can be overridden\nat startup if desired, per the example code further down this page)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"storage.disable_usb_drive()\n")),(0,a.kt)("h2",{id:"using-your-keyboard-before-the-os-loads"},"Using your keyboard before the OS loads"),(0,a.kt)("p",null,"You can make your keyboard work in your computer's BIOS and bootloader (useful if you dual-boot)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"usb_hid.enable(boot_device=1)\n")),(0,a.kt)("h2",{id:"disabling-serial-communication"},"Disabling serial communication"),(0,a.kt)("p",null,"By default, you can connect to your board's serial console, which can be useful for debugging,\nbut may not be desired for everyday use."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# Equivalent to usb_cdc.enable(console=False, data=False)\nusb_cdc.disable()\n")),(0,a.kt)("h2",{id:"example-code"},"Example code"),(0,a.kt)("p",null,"Below is a fully working example, which disables USB storage, CDC and enables BIOS mode."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import supervisor\nimport board\nimport digitalio\nimport storage\nimport usb_cdc\nimport usb_hid\n\n# This is from the base kmk boot.py\nsupervisor.set_next_stack_limit(4096 + 4096)\n\n# If this key is held during boot, don't run the code which hides the storage and disables serial\n# To use another key just count its row and column and use those pins\n# You can also use any other pins not already used in the matrix and make a button just for accesing your storage\ncol = digitalio.DigitalInOut(board.GP2)\nrow = digitalio.DigitalInOut(board.GP13)\n\n# TODO: If your diode orientation is ROW2COL, then make row the output and col the input\ncol.switch_to_output(value=True)\nrow.switch_to_input(pull=digitalio.Pull.DOWN)\n\nif not row.value:\n    storage.disable_usb_drive()\n    # Equivalent to usb_cdc.enable(console=False, data=False)\n    usb_cdc.disable()\n    usb_hid.enable(boot_device=1)\n\nrow.deinit()\ncol.deinit()\n")))}b.isMDXComponent=!0}}]);