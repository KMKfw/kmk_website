"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4889],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=u(n),h=o,d=f["".concat(l,".").concat(h)]||f[h]||p[h]||i;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1407:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={},l="THIS IS OUT OF DATE. DO NOT USE. ONLY FOR REFERENCE",u={unversionedId:"kmkpython_vs_circuitpython",id:"kmkpython_vs_circuitpython",title:"THIS IS OUT OF DATE. DO NOT USE. ONLY FOR REFERENCE",description:"Firmware of choice",source:"@site/docs/kmkpython_vs_circuitpython.md",sourceDirName:".",slug:"/kmkpython_vs_circuitpython",permalink:"/docs/kmkpython_vs_circuitpython",draft:!1,editUrl:"https://github.com/KMKfw/kmk_firmware/tree/master/docs/kmkpython_vs_circuitpython.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Keys",permalink:"/docs/keys"},next:{title:"Layers",permalink:"/docs/layers"}},s={},p=[{value:"Firmware of choice",id:"firmware-of-choice",level:2},{value:"KMKPython",id:"kmkpython",level:3},{value:"CircuitPython",id:"circuitpython",level:3},{value:"Notable differences include",id:"notable-differences-include",level:4}],f={toc:p};function h(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"this-is-out-of-date-do-not-use-only-for-reference"},"THIS IS OUT OF DATE. DO NOT USE. ONLY FOR REFERENCE"),(0,i.kt)("h2",{id:"firmware-of-choice"},"Firmware of choice"),(0,i.kt)("h3",{id:"kmkpython"},"KMKPython"),(0,i.kt)("p",null,"KMKPython is a fork of CircuitPython, but with libraries for most extensions\nbuilt in. This saves you from having to get them all and keep them updated\nyourself. There may be other features added in the future that are exclusive to\nKMKPython. For the nice!nano, this is highly recommended, and used in place of\nCircuitPython.\nNotable differences include"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Built in libraries for Bluetooth, RGB, and more"),(0,i.kt)("li",{parentName:"ul"},"Saves space as builds are optimized for keyboards"),(0,i.kt)("li",{parentName:"ul"},"Microcontrollers like the nice!nano will be able to access all features out of\nthe box.")),(0,i.kt)("h3",{id:"circuitpython"},"CircuitPython"),(0,i.kt)("p",null,"CircuitPython can be installed by following this guide using the guide\n",(0,i.kt)("a",{parentName:"p",href:"https://learn.adafruit.com/welcome-to-circuitpython/installing-circuitpython"},"here"),".\nIt's recommended to run the latest stable version that is at least 5.0 or higher.\nBeta versions may work, but expect limited support."),(0,i.kt)("h4",{id:"notable-differences-include"},"Notable differences include"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Supports more devices"),(0,i.kt)("li",{parentName:"ul"},"Less built in libraries. If using RGB, Bluetooth, and more, you will have to\nadd these libraries yourself"),(0,i.kt)("li",{parentName:"ul"},"Some devices such as the nice!nano don't have much free space, so not all\nfeatures can be installed at the same time")))}h.isMDXComponent=!0}}]);