"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8363],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7919:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={},l="String Substitution",u={unversionedId:"string_substitution",id:"string_substitution",title:"String Substitution",description:"The String Substitution module lets a user replace one typed sequence of characters with another. If a string of characters you type matches an entry in your dictionary, it gets deleted and replaced with the corresponding replacement string.",source:"@site/docs/string_substitution.md",sourceDirName:".",slug:"/string_substitution",permalink:"/docs/string_substitution",draft:!1,editUrl:"https://github.com/KMKfw/kmk_firmware/tree/master/docs/string_substitution.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sticky Mod",permalink:"/docs/sticky_mod"},next:{title:"Support",permalink:"/docs/support"}},c={},p=[{value:"Usage",id:"usage",level:2},{value:"Recommendations",id:"recommendations",level:3},{value:"Limitations",id:"limitations",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"string-substitution"},"String Substitution"),(0,o.kt)("p",null,"The String Substitution module lets a user replace one typed sequence of characters with another. If a string of characters you type matches an entry in your dictionary, it gets deleted and replaced with the corresponding replacement string."),(0,o.kt)("p",null,"Potential uses:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Rudimentary auto-correct: replace ",(0,o.kt)("inlineCode",{parentName:"li"},"yuo")," with ",(0,o.kt)("inlineCode",{parentName:"li"},"you")),(0,o.kt)("li",{parentName:"ul"},"Text expansion, \xe0 la ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/federico-terzi/espanso"},"espanso"),": when ",(0,o.kt)("inlineCode",{parentName:"li"},":sig")," is typed, replace it with ",(0,o.kt)("inlineCode",{parentName:"li"},"John Doe"),", or turn ",(0,o.kt)("inlineCode",{parentName:"li"},"idk")," into ",(0,o.kt)("inlineCode",{parentName:"li"},"I don't know"))),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The String Substitution module takes a single argument to be passed during initialization: a user-defined dictionary where the keys are the text to be replaced and the values are the replacement text."),(0,o.kt)("p",null,"Example is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from kmk.modules.string_substitution import StringSubstitution\n\nmy_dictionary = {\n    'yuo': 'you',\n    ':sig': 'John Doe',\n    'idk': \"I don't know\"\n}\nstring_substitution = StringSubstitution(dictionary=my_dictionary)\nkeyboard.modules.append(string_substitution)\n")),(0,o.kt)("h3",{id:"recommendations"},"Recommendations"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Consider prefixing text expansion entries with a symbol to prevent accidental activations: ",(0,o.kt)("inlineCode",{parentName:"li"},":sig"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"!email"),", etc."),(0,o.kt)("li",{parentName:"ol"},"If you want multiple similar replacements, consider adding a number to prevent unreachable matches: ",(0,o.kt)("inlineCode",{parentName:"li"},"replaceme1"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"replaceme2"),", etc.")),(0,o.kt)("h3",{id:"limitations"},"Limitations"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Currently supports characters for which there is a corresponding keycode in KMK - support for international characters is not implemented."),(0,o.kt)("li",{parentName:"ol"},"Since this runs on your keyboard, it is not context-aware. It can't tell if you are typing in a valid text field or not."),(0,o.kt)("li",{parentName:"ol"},'In the interest of a responsive typing experience, the first valid match will be used as soon as it is found. If your dictionary contains "abc" and "abcd", "abcd" will not be matchable.')))}m.isMDXComponent=!0}}]);