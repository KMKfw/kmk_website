"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7771],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6414:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const i={},a="Flashing Instructions",l={unversionedId:"flashing",id:"flashing",title:"Flashing Instructions",description:"In general, we recommend using the instructions in README.md, however, mostly",source:"@site/docs/flashing.md",sourceDirName:".",slug:"/flashing",permalink:"/docs/flashing",draft:!1,editUrl:"https://github.com/KMKfw/kmk_firmware/tree/master/docs/flashing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Extensions",permalink:"/docs/extensions"},next:{title:"Handwire keyboards",permalink:"/docs/handwiring"}},s={},u=[{value:"Linux/BSD",id:"linuxbsd",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"flashing-instructions"},"Flashing Instructions"),(0,o.kt)("p",null,"In general, we recommend using the instructions in ",(0,o.kt)("inlineCode",{parentName:"p"},"README.md"),", however, mostly\nas a development artifact, another method of flashing KMK exists (tested and\nsupported only on Linux, though it should also work on macOS, the BSDs, and\nother Unix-likes. It may also work on Cygwin and the Windows Subsystem for\nLinux)."),(0,o.kt)("p",null,"Given ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"rsync")," are available on your system (in ",(0,o.kt)("inlineCode",{parentName:"p"},"$PATH"),"), the\nfollowing will copy the ",(0,o.kt)("inlineCode",{parentName:"p"},"kmk")," tree to your CircuitPython device, and will copy\nthe file defined as ",(0,o.kt)("inlineCode",{parentName:"p"},"USER_KEYMAP")," as your ",(0,o.kt)("inlineCode",{parentName:"p"},"main.py"),". It will also copy our\n",(0,o.kt)("inlineCode",{parentName:"p"},"boot.py"),". If any of these files exist on your CircuitPython device already, they\nwill be overwritten without a prompt."),(0,o.kt)("p",null,"If you get permissions errors here, ",(0,o.kt)("strong",{parentName:"p"},"don't run make as root or with sudo"),". See\n",(0,o.kt)("inlineCode",{parentName:"p"},"Troubleshooting")," below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"make MOUNTPOINT=/media/CIRCUITPY USER_KEYMAP=user_keymaps/nameofyourkeymap.py BOARD=board/nameofyourboard/kb.py\n")),(0,o.kt)("h1",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h2",{id:"linuxbsd"},"Linux/BSD"),(0,o.kt)("p",null,"Check to see if your drive may have mounted elsewhere with a GUI tool or other\nautomounter. Most of these tools will mount your device under ",(0,o.kt)("inlineCode",{parentName:"p"},"/media"),", probably\nas ",(0,o.kt)("inlineCode",{parentName:"p"},"/media/CIRCUITPY"),".  If it's not mounted, you can read up on how to mount a\ndrive manually\n",(0,o.kt)("a",{parentName:"p",href:"https://wiki.archlinux.org/index.php/File_systems#Mount_a_file_system"},"here"),"."),(0,o.kt)("p",null,"For example,"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"sudo mount -o uid=$(id -u),gid=$(id -g) /dev/disk/by-label/CIRCUITPY ~/mnt")),(0,o.kt)("p",null,"If you're still having issues, check out our support page to see where you can\ncome say hi and the community will gladly help you out."))}d.isMDXComponent=!0}}]);