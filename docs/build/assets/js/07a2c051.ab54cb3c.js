"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1342],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(t),b=a,m=u["".concat(c,".").concat(b)]||u[b]||d[b]||o;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=b;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},7422:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={},l="Pimoroni Trackball",i={unversionedId:"en/pimoroni_trackball",id:"en/pimoroni_trackball",title:"Pimoroni Trackball",description:"Module handles usage of Trackball Breakout by Pimoroni.",source:"@site/docs/en/pimoroni_trackball.md",sourceDirName:"en",slug:"/en/pimoroni_trackball",permalink:"/docs/en/pimoroni_trackball",draft:!1,editUrl:"https://github.com/KMKfw/kmk_firmware/tree/master/docs/en/pimoroni_trackball.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Peg RGB Matrix",permalink:"/docs/en/peg_rgb_matrix"},next:{title:"Porting to KMK",permalink:"/docs/en/porting_to_kmk"}},c={},s=[{value:"Usage",id:"usage",level:3},{value:"Key inputs, other handler combinations",id:"key-inputs-other-handler-combinations",level:3},{value:"Backlight",id:"backlight",level:3}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pimoroni-trackball"},"Pimoroni Trackball"),(0,a.kt)("p",null,"Module handles usage of Trackball Breakout by Pimoroni."),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Declare I2C bus and add this module in your main class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from kmk.modules.pimoroni_trackball import Trackball, TrackballMode\nimport busio as io\n\ni2c = io.I2C(scl=board.D3, sda=board.D2)\ntrackball = Trackball(i2c)\nkeyboard.modules.append(trackball)\n")),(0,a.kt)("p",null,"Module will also work when you cannot use ",(0,a.kt)("inlineCode",{parentName:"p"},"busio")," and do ",(0,a.kt)("inlineCode",{parentName:"p"},"import bitbangio as io")," instead."),(0,a.kt)("h3",{id:"key-inputs-other-handler-combinations"},"Key inputs, other handler combinations"),(0,a.kt)("p",null,"If you have used this thing on a mobile device, you will know it excels at cursor movement"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"\nfrom kmk.modules.pimoroni_trackball import Trackball, TrackballMode, PointingHandler, KeyHandler, ScrollHandler, ScrollDirection\n\ntrackball = Trackball(\n    i2c, \n    mode=TrackballMode.MOUSE_MODE, \n    # optional: set rotation angle of the trackball breakout board, default is 1\n    angle_offset=1.6, \n    handlers=[\n        # act like an encoder, input arrow keys\n        KeyHandler(KC.UP, KC.RIGHT, KC.DOWN, KC.LEFT, KC.ENTER), \n        # on layer 1 and above use the default pointing behavior\n        PointingHandler(),\n        # use ScrollDirection.NATURAL (default) or REVERSE to change the scrolling direction\n        ScrollHandler(scroll_direction=ScrollDirection.NATURAL)\n    ]\n)\n\n# now you can use these KeyCodes:\n\nKC.TB_NEXT_HANDLER # rotates through available \nKC.TB_HANDLER(0) # activate KeyHandler \nKC.TB_HANDLER(1) # activate MouseHandler\n\n")),(0,a.kt)("h3",{id:"backlight"},"Backlight"),(0,a.kt)("p",null,"Setup backlight color using below commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"trackball.set_rgbw(r, g, b, w)\ntrackball.set_red(brightness)\ntrackball.set_green(brightness)\ntrackball.set_blue(brightness)\ntrackball.set_white(brightness)\n")),(0,a.kt)("p",null,"This module exposes one keycode ",(0,a.kt)("inlineCode",{parentName:"p"},"TB_MODE"),", which on hold switches between ",(0,a.kt)("inlineCode",{parentName:"p"},"MOUSE_MODE")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"SCROLL_MODE"),".\nTo choose the default mode, pass it in ",(0,a.kt)("inlineCode",{parentName:"p"},"Trackball")," constructor."))}d.isMDXComponent=!0}}]);